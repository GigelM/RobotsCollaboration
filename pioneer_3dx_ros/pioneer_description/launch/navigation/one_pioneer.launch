<?xml version="1.0"?>
<launch>
  <arg name="robot_name"/>
  <arg name="init_pose"/>

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="$(arg init_pose) -urdf -model $(arg robot_name) -param /robot_description"/>

  <!-- send fake joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
    <param name="use_gui" value="FALSE"/>
    <remap from="robot_description" to="/robot_description"/>
  </node>

  <!-- Combine joint values -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

  <!-- The odometry estimator, throttling, fake laser etc. go here -->
  <!-- All the stuff as from usual robot launch file -->  

	 <!-- Convert depth image to laser scan -->
    <!--><node name="laserscan_kinect" pkg="laserscan_kinect" type="laserscan_kinect" > 
      <remap from="image" to="/$(arg robot_name)/camera/depth/image_raw"/>
      <remap from="camera_info" to="/$(arg robot_name)/camera/depth/camera_info"/>
      <rosparam command="load" file="$(find laserscan_kinect)/config/params.yaml" />
      <rosparam param="output_frame_id" subst_value="True">$(arg robot_name)/camera_depth_frame</rosparam>
    </node><-->
<!-->
  <node pkg="tf" type="tf_remap" name="tf_remapper" output="screen">
    <rosparam param="mappings">
    [{old: camera_depth_frame, new: $(arg robot_name)/camera_depth_frame}]
  </rosparam>
</node> <-->

  <node pkg="tf2_ros" type="static_transform_publisher" name="scan_tf" args="0.14 0 0.27 0 0 0 $(arg robot_name)/base_link $(arg robot_name)/camera_link"/>
</launch>
