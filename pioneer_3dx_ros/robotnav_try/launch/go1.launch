<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="base" value="pioneer"/>
  <arg name="3d_sensor" value="kinect"/>

  <!-- Start the world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find pioneer_gazebo)/worlds/maze.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find pioneer_description)/urdf/pioneer_kinect.urdf.xacro'"/>

  <!-- Start the robots -->
  <group ns="pioneer1">
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"	args="-x 7.3 -y 7.0 yaw 1.57 -urdf -model pioneer1 -param /robot_description"/>

    <!-- send fake joint values -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
      <param name="use_gui" value="FALSE"/>
      <remap from="robot_description" to="/robot_description"/>
    </node>

    <!-- Combine joint values -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

    <!-- LASERSCAN LAUNCH-->
    <node name="laserscan_kinect" pkg="laserscan_kinect" type="laserscan_kinect" > 
      <remap from="image" to="/pioneer1/camera/depth/image_raw"/>
      <remap from="camera_info" to="/pioneer1/camera/depth/camera_info"/>
      <rosparam command="load" file="$(find robotnav_try)/config/params.yaml" />
      <rosparam param="output_frame_id" subst_value="True">camera_depth_frame</rosparam>
    </node>
  <node pkg="tf2_ros" type="static_transform_publisher" name="scan_tf" args="0.14 0 0.27 0 0 0 pioneer1/base_link pioneer1/camera_link"/>
  </group>

  <group ns="pioneer2">
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"	args="-x 9.3 -y 7.0 yaw -1.57 -urdf -model pioneer2 -param /robot_description"/>

    <!-- send fake joint values -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
      <param name="use_gui" value="FALSE"/>
      <remap from="robot_description" to="/robot_description"/>
    </node>

    <!-- Combine joint values -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>

    <!-- LASERSCAN LAUNCH-->
    <node name="laserscan_kinect" pkg="laserscan_kinect" type="laserscan_kinect" > 
      <remap from="image" to="/pioneer2/camera/depth/image_raw"/>
      <remap from="camera_info" to="/pioneer2/camera/depth/camera_info"/>
      <rosparam command="load" file="$(find robotnav_try)/config/params.yaml" />
      <rosparam param="output_frame_id" subst_value="True">camera_depth_frame</rosparam>
    </node>
  <node pkg="tf2_ros" type="static_transform_publisher" name="scan_tf" args="0.14 0 0.27 0 0 0 pioneer2/base_link pioneer2/camera_link"/>
  </group>

  <!--  MAP SERVER LAUNCH-->
  <param name="/use_sim_time" value="true"/>

  <!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find pioneer_gazebo)/map/scout_gabi.yaml" >
    <param name="frame_id" value="/map" />
  </node>
  
  <!--  NAVIGATION-->
  <group ns="pioneer1">
    <!--  AMCL-->
    <param name="amcl/initial_pose_x" value="7.3" />
    <param name="amcl/initial_pose_y" value="7" />
    <param name="amcl/initial_pose_a" value="1.57" />
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
      <param name="use_map_topic" value="true"/>
      <!-- Publish scans from best pose at a max of 10 Hz -->
      <param name="odom_model_type" value="diff"/>
      <param name="odom_alpha5" value="0.1"/>
      <param name="gui_publish_rate" value="10.0"/>
      <param name="laser_max_beams" value="60"/>
      <param name="laser_max_range" value="12.0"/>
      <param name="min_particles" value="500"/>
      <param name="max_particles" value="2000"/>
      <param name="kld_err" value="0.05"/>
      <param name="kld_z" value="0.99"/>
      <param name="odom_alpha1" value="0.2"/>
      <param name="odom_alpha2" value="0.2"/>
        <!-- translation std dev, m -->
      <param name="odom_alpha3" value="0.2"/>
      <param name="odom_alpha4" value="0.2"/>
      <param name="laser_z_hit" value="0.5"/>
      <param name="laser_z_short" value="0.05"/>
      <param name="laser_z_max" value="0.05"/>
      <param name="laser_z_rand" value="0.5"/>
      <param name="laser_sigma_hit" value="0.2"/>
      <param name="laser_lambda_short" value="0.1"/>
      <param name="laser_model_type" value="likelihood_field"/>
      <!-- <param name="laser_model_type" value="beam"/> -->
      <param name="laser_likelihood_max_dist" value="2.0"/>
      <param name="update_min_d" value="0.25"/>
      <param name="update_min_a" value="0.2"/>
      <param name="base_frame_id" value="/pioneer1/base_link"/> 
      <param name="odom_frame_id" value="/pioneer1/odom"/> 
      <param name="global_frame_id" value="/map" />
      <param name="resample_interval" value="1"/>
      <!-- Increase tolerance because the computer can get quite busy -->
      <param name="transform_tolerance" value="1.0"/>
      <param name="recovery_alpha_slow" value="0.0"/>
      <param name="recovery_alpha_fast" value="0.0"/>
      <remap from="scan" to="/pioneer1/scan"/>    
      <remap from="static_map" to="/static_map" /> 
      <remap from="map" to="/map" />
    </node>

    <!--  MOVE_BASE-->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="$(find pioneer_nav)/config/costmap_common_params_kinect.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find pioneer_nav)/config/costmap_common_params_kinect.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find pioneer_nav)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find pioneer_nav)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find pioneer_nav)/config/base_local_planner_params.yaml" command="load" />
    </node>

    <!--  NAV_GOAL-->
    <node pkg="simple_navigation_goals" type="map_navigation_client" name="map_goal_client" output="screen"/>
    
    <!--  CONTROLLER-->
    <node pkg="pioneer_ros" type="pioneer_pid_controller" name="pioneer_ros">
  	  <rosparam file="$(find pioneer_ros)/pioneer_controller_params.yaml" command="load"/>
  	  <remap from="cmd_vel" to="controller_cmd_vel"/>
    </node>
    <node pkg="pioneer_ros" type="move_base_recover" name="move_base_recover" output="screen" />
  </group>

  <group ns="pioneer2">
    <!--  AMCL-->
    <param name="amcl/initial_pose_x" value="9.3" />
    <param name="amcl/initial_pose_y" value="7" />
    <param name="amcl/initial_pose_a" value="-1.57" />
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
      <param name="use_map_topic" value="true"/>
      <!-- Publish scans from best pose at a max of 10 Hz -->
      <param name="odom_model_type" value="diff"/>
      <param name="odom_alpha5" value="0.1"/>
      <param name="gui_publish_rate" value="10.0"/>
      <param name="laser_max_beams" value="60"/>
      <param name="laser_max_range" value="12.0"/>
      <param name="min_particles" value="500"/>
      <param name="max_particles" value="2000"/>
      <param name="kld_err" value="0.05"/>
      <param name="kld_z" value="0.99"/>
      <param name="odom_alpha1" value="0.2"/>
      <param name="odom_alpha2" value="0.2"/>
        <!-- translation std dev, m -->
      <param name="odom_alpha3" value="0.2"/>
      <param name="odom_alpha4" value="0.2"/>
      <param name="laser_z_hit" value="0.5"/>
      <param name="laser_z_short" value="0.05"/>
      <param name="laser_z_max" value="0.05"/>
      <param name="laser_z_rand" value="0.5"/>
      <param name="laser_sigma_hit" value="0.2"/>
      <param name="laser_lambda_short" value="0.1"/>
      <param name="laser_model_type" value="likelihood_field"/>
      <!-- <param name="laser_model_type" value="beam"/> -->
      <param name="laser_likelihood_max_dist" value="2.0"/>
      <param name="update_min_d" value="0.25"/>
      <param name="update_min_a" value="0.2"/>
      <param name="base_frame_id" value="/pioneer2/base_link"/> 
      <param name="odom_frame_id" value="/pioneer2/odom"/> 
      <param name="global_frame_id" value="/map" />
      <param name="resample_interval" value="1"/>
      <!-- Increase tolerance because the computer can get quite busy -->
      <param name="transform_tolerance" value="1.0"/>
      <param name="recovery_alpha_slow" value="0.0"/>
      <param name="recovery_alpha_fast" value="0.0"/>
      <remap from="scan" to="/pioneer2/scan"/>    
      <remap from="static_map" to="/static_map" /> 
      <remap from="map" to="/map" />
    </node>

    <!--  MOVE_BASE-->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="$(find pioneer_nav)/config/costmap_common_params_kinect.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find pioneer_nav)/config/costmap_common_params_kinect.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find pioneer_nav)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find pioneer_nav)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find pioneer_nav)/config/base_local_planner_params.yaml" command="load" />
    </node>

    <!--  NAV_GOAL-->
    <node pkg="simple_navigation_goals" type="map_navigation_client" name="map_goal_client" output="screen"/>

    <!--  CONTROLLER-->
    <node pkg="pioneer_ros" type="pioneer_pid_controller" name="pioneer_ros">
  	  <rosparam file="$(find pioneer_ros)/pioneer_controller_params.yaml" command="load"/>
  	  <remap from="cmd_vel" to="controller_cmd_vel"/>
    </node>
    <node pkg="pioneer_ros" type="move_base_recover" name="move_base_recover" output="screen" />
  </group>
  


</launch>
